// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: protos-repo/wearable.proto
package org.microg.wearable.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import okio.ByteString;

import static com.squareup.wire.Message.Datatype.BYTES;
import static com.squareup.wire.Message.Datatype.STRING;

public final class SetAsset extends Message {

  public static final String DEFAULT_DIGEST = "";
  public static final ByteString DEFAULT_DATA = ByteString.EMPTY;

  @ProtoField(tag = 1, type = STRING)
  public final String digest;

  @ProtoField(tag = 2, type = BYTES)
  public final ByteString data;

  @ProtoField(tag = 3)
  public final AppKeys appkeys;

  public SetAsset(String digest, ByteString data, AppKeys appkeys) {
    this.digest = digest;
    this.data = data;
    this.appkeys = appkeys;
  }

  private SetAsset(Builder builder) {
    this(builder.digest, builder.data, builder.appkeys);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof SetAsset)) return false;
    SetAsset o = (SetAsset) other;
    return equals(digest, o.digest)
        && equals(data, o.data)
        && equals(appkeys, o.appkeys);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = digest != null ? digest.hashCode() : 0;
      result = result * 37 + (data != null ? data.hashCode() : 0);
      result = result * 37 + (appkeys != null ? appkeys.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<SetAsset> {

    public String digest;
    public ByteString data;
    public AppKeys appkeys;

    public Builder() {
    }

    public Builder(SetAsset message) {
      super(message);
      if (message == null) return;
      this.digest = message.digest;
      this.data = message.data;
      this.appkeys = message.appkeys;
    }

    public Builder digest(String digest) {
      this.digest = digest;
      return this;
    }

    public Builder data(ByteString data) {
      this.data = data;
      return this;
    }

    public Builder appkeys(AppKeys appkeys) {
      this.appkeys = appkeys;
      return this;
    }

    @Override
    public SetAsset build() {
      return new SetAsset(this);
    }
  }
}
