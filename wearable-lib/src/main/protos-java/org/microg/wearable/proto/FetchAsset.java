// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: protos-repo/wearable.proto
package org.microg.wearable.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.BOOL;
import static com.squareup.wire.Message.Datatype.STRING;

public final class FetchAsset extends Message {

  public static final String DEFAULT_PACKAGENAME = "";
  public static final String DEFAULT_ASSETNAME = "";
  public static final Boolean DEFAULT_PERMISSION = false;
  public static final String DEFAULT_SIGNATUREDIGEST = "";

  @ProtoField(tag = 1, type = STRING)
  public final String packageName;

  @ProtoField(tag = 2, type = STRING)
  public final String assetName;

  @ProtoField(tag = 3, type = BOOL)
  public final Boolean permission;

  @ProtoField(tag = 4, type = STRING)
  public final String signatureDigest;

  public FetchAsset(String packageName, String assetName, Boolean permission, String signatureDigest) {
    this.packageName = packageName;
    this.assetName = assetName;
    this.permission = permission;
    this.signatureDigest = signatureDigest;
  }

  private FetchAsset(Builder builder) {
    this(builder.packageName, builder.assetName, builder.permission, builder.signatureDigest);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof FetchAsset)) return false;
    FetchAsset o = (FetchAsset) other;
    return equals(packageName, o.packageName)
        && equals(assetName, o.assetName)
        && equals(permission, o.permission)
        && equals(signatureDigest, o.signatureDigest);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = packageName != null ? packageName.hashCode() : 0;
      result = result * 37 + (assetName != null ? assetName.hashCode() : 0);
      result = result * 37 + (permission != null ? permission.hashCode() : 0);
      result = result * 37 + (signatureDigest != null ? signatureDigest.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<FetchAsset> {

    public String packageName;
    public String assetName;
    public Boolean permission;
    public String signatureDigest;

    public Builder() {
    }

    public Builder(FetchAsset message) {
      super(message);
      if (message == null) return;
      this.packageName = message.packageName;
      this.assetName = message.assetName;
      this.permission = message.permission;
      this.signatureDigest = message.signatureDigest;
    }

    public Builder packageName(String packageName) {
      this.packageName = packageName;
      return this;
    }

    public Builder assetName(String assetName) {
      this.assetName = assetName;
      return this;
    }

    public Builder permission(Boolean permission) {
      this.permission = permission;
      return this;
    }

    public Builder signatureDigest(String signatureDigest) {
      this.signatureDigest = signatureDigest;
      return this;
    }

    @Override
    public FetchAsset build() {
      return new FetchAsset(this);
    }
  }
}
