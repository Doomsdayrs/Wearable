// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: protos-repo/wearable.proto
package org.microg.wearable.proto;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import okio.ByteString;

import static com.squareup.wire.Message.Datatype.BYTES;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;

public final class Request extends Message {

  public static final Integer DEFAULT_REQUESTID = 0;
  public static final String DEFAULT_PACKAGENAME = "";
  public static final String DEFAULT_SIGNATUREDIGEST = "";
  public static final String DEFAULT_TARGETNODEID = "";
  public static final Integer DEFAULT_UNKNOWN5 = 0;
  public static final String DEFAULT_PATH = "";
  public static final ByteString DEFAULT_RAWDATA = ByteString.EMPTY;
  public static final String DEFAULT_SOURCENODEID = "";
  public static final Integer DEFAULT_GENERATION = 0;

  @ProtoField(tag = 1, type = INT32)
  public final Integer requestId;

  @ProtoField(tag = 2, type = STRING)
  public final String packageName;

  @ProtoField(tag = 3, type = STRING)
  public final String signatureDigest;

  @ProtoField(tag = 4, type = STRING)
  public final String targetNodeId;

  @ProtoField(tag = 5, type = INT32)
  public final Integer unknown5;

  @ProtoField(tag = 6, type = STRING)
  public final String path;

  @ProtoField(tag = 7, type = BYTES)
  public final ByteString rawData;

  @ProtoField(tag = 8, type = STRING)
  public final String sourceNodeId;

  @ProtoField(tag = 9)
  public final ChannelRequest request;

  @ProtoField(tag = 10, type = INT32)
  public final Integer generation;

  public Request(Integer requestId, String packageName, String signatureDigest, String targetNodeId, Integer unknown5, String path, ByteString rawData, String sourceNodeId, ChannelRequest request, Integer generation) {
    this.requestId = requestId;
    this.packageName = packageName;
    this.signatureDigest = signatureDigest;
    this.targetNodeId = targetNodeId;
    this.unknown5 = unknown5;
    this.path = path;
    this.rawData = rawData;
    this.sourceNodeId = sourceNodeId;
    this.request = request;
    this.generation = generation;
  }

  private Request(Builder builder) {
    this(builder.requestId, builder.packageName, builder.signatureDigest, builder.targetNodeId, builder.unknown5, builder.path, builder.rawData, builder.sourceNodeId, builder.request, builder.generation);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Request)) return false;
    Request o = (Request) other;
    return equals(requestId, o.requestId)
        && equals(packageName, o.packageName)
        && equals(signatureDigest, o.signatureDigest)
        && equals(targetNodeId, o.targetNodeId)
        && equals(unknown5, o.unknown5)
        && equals(path, o.path)
        && equals(rawData, o.rawData)
        && equals(sourceNodeId, o.sourceNodeId)
        && equals(request, o.request)
        && equals(generation, o.generation);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = requestId != null ? requestId.hashCode() : 0;
      result = result * 37 + (packageName != null ? packageName.hashCode() : 0);
      result = result * 37 + (signatureDigest != null ? signatureDigest.hashCode() : 0);
      result = result * 37 + (targetNodeId != null ? targetNodeId.hashCode() : 0);
      result = result * 37 + (unknown5 != null ? unknown5.hashCode() : 0);
      result = result * 37 + (path != null ? path.hashCode() : 0);
      result = result * 37 + (rawData != null ? rawData.hashCode() : 0);
      result = result * 37 + (sourceNodeId != null ? sourceNodeId.hashCode() : 0);
      result = result * 37 + (request != null ? request.hashCode() : 0);
      result = result * 37 + (generation != null ? generation.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<Request> {

    public Integer requestId;
    public String packageName;
    public String signatureDigest;
    public String targetNodeId;
    public Integer unknown5;
    public String path;
    public ByteString rawData;
    public String sourceNodeId;
    public ChannelRequest request;
    public Integer generation;

    public Builder() {
    }

    public Builder(Request message) {
      super(message);
      if (message == null) return;
      this.requestId = message.requestId;
      this.packageName = message.packageName;
      this.signatureDigest = message.signatureDigest;
      this.targetNodeId = message.targetNodeId;
      this.unknown5 = message.unknown5;
      this.path = message.path;
      this.rawData = message.rawData;
      this.sourceNodeId = message.sourceNodeId;
      this.request = message.request;
      this.generation = message.generation;
    }

    public Builder requestId(Integer requestId) {
      this.requestId = requestId;
      return this;
    }

    public Builder packageName(String packageName) {
      this.packageName = packageName;
      return this;
    }

    public Builder signatureDigest(String signatureDigest) {
      this.signatureDigest = signatureDigest;
      return this;
    }

    public Builder targetNodeId(String targetNodeId) {
      this.targetNodeId = targetNodeId;
      return this;
    }

    public Builder unknown5(Integer unknown5) {
      this.unknown5 = unknown5;
      return this;
    }

    public Builder path(String path) {
      this.path = path;
      return this;
    }

    public Builder rawData(ByteString rawData) {
      this.rawData = rawData;
      return this;
    }

    public Builder sourceNodeId(String sourceNodeId) {
      this.sourceNodeId = sourceNodeId;
      return this;
    }

    public Builder request(ChannelRequest request) {
      this.request = request;
      return this;
    }

    public Builder generation(Integer generation) {
      this.generation = generation;
      return this;
    }

    @Override
    public Request build() {
      return new Request(this);
    }
  }
}
